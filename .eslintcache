[{"C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\index.js":"1","C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\components\\Footer.js":"2","C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\components\\Header.js":"3","C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\pages\\HomePage.js":"4","C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\components\\Context\\index.js":"5"},{"size":289,"mtime":1606173395456,"results":"6","hashOfConfig":"7"},{"size":1333,"mtime":1606194636546,"results":"8","hashOfConfig":"7"},{"size":1157,"mtime":1606166278012,"results":"9","hashOfConfig":"7"},{"size":4038,"mtime":1606199095421,"results":"10","hashOfConfig":"7"},{"size":3885,"mtime":1606199143959,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"7tfvcj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\index.js",[],["24","25"],"C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\components\\Footer.js",[],"C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\components\\Header.js",[],"C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\pages\\HomePage.js",[],"C:\\Users\\DragonLord\\Desktop\\dApp\\Ethanol-Client\\src\\components\\Context\\index.js",["26"],"import React, { createContext, Component } from \"react\";\r\nimport Web3 from 'web3';\r\nimport { abi as _ethnolABI } from \"../../contracts/Ethanol.json\";\r\nimport { abi as _ethnolVaultABI } from \"../../contracts/EthanolVault.json\";\r\n\r\nconst web3Context = createContext();\r\n\r\nclass Web3Provider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            loading: true,\r\n            web3: null,\r\n            user: null,\r\n            token: null,    \r\n            contract: null,\r\n            balance: 0,\r\n            totalSupply: 0,\r\n            walletBalance: 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // await this.connectWallet()\r\n    }\r\n\r\n    // loadWeb3\r\n    loadWeb3 = async () => {\r\n        if(window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum);\r\n            await window.ethereum.enable();\r\n            // cancel autorefresh on network change\r\n            window.ethereum.autoRefreshOnNetworkChange = false;\r\n\r\n        } else if(window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n            window.alert(\"Non-Ethereum browser detected. You should consider trying Metamask\")\r\n        }\r\n    }\r\n\r\n    // load blockchain data\r\n    loadBlockchainData = async () => {\r\n        const web3 = window.web3;\r\n        // const Ethanol = '0x508726C4126fDa623e605499795d5be0b664E93C';\r\n        const Ethanol = '0x63D0eEa1D7C0d1e89d7e665708d7e8997C0a9eD6';\r\n        // const EthanolVault = '0x9aBe2b156D5357F1e77500fc83fe51250B7F2106';\r\n\r\n        const token = new web3.eth.Contract(_ethnolABI, Ethanol);\r\n        // const contract = new web3.eth.Contract(_ethnolVaultABI, EthanolVault);\r\n        const accounts = await web3.eth.getAccounts();\r\n        const user = accounts[0];\r\n\r\n        const balance = this.fromWei(web3, await token.methods.balanceOf(user).call());\r\n        const totalSupply = this.fromWei(web3, await token.methods.totalSupply().call());\r\n        const walletBalance = this.fromWei(web3, await token.methods.balanceOf('0x3A2fB39F16afA7f745375D4181E80Ee9f962ea90').call());\r\n\r\n        this.setState({ \r\n            loading: false,\r\n            web3, \r\n            user,\r\n            token,\r\n            // contract,\r\n            balance,\r\n            totalSupply,\r\n            walletBalance\r\n        });\r\n    }\r\n\r\n    connectWallet = async () => {\r\n        await this.loadWeb3();\r\n        await this.loadBlockchainData();\r\n    }\r\n\r\n    fromWei = (web3, _amount) => web3.utils.fromWei(_amount.toString(), 'ether');\r\n\r\n    totalTokenSupply = async () => {\r\n        return await this.state.token.methods.totalSupply().call();\r\n    }\r\n\r\n    claimableRewards = async () => {\r\n        // return await this.state.contract.methods.checkRewards(this.state.user).call();\r\n    }\r\n\r\n    MonthlySave = async () => {\r\n\r\n    }\r\n\r\n    YearlySave = async () => {\r\n\r\n    }\r\n\r\n    shareRewards = async () => {\r\n\r\n    }\r\n\r\n    ReleaseTokens = async () => {\r\n\r\n    }\r\n\r\n    SeedRewardPool = async => {\r\n\r\n    }\r\n\r\n    withdrawRewards = async _amount => {\r\n        if(this.state.loading) return this.connectWallet();   \r\n        // return await this.state.contract.methods.withdrawRewards(this.state.user).call();\r\n    }\r\n\r\n    getLockedTokens = async () => {  \r\n        // return await this.state.contract.methods.getLockedTokens(this.state.user).call();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <web3Context.Provider value= {{\r\n                ...this.state,\r\n                connectWallet: this.connectWallet,\r\n                totalTokenSupply: this.totalTokenSupply,\r\n                getLockedTokens: this.getLockedTokens,\r\n                claimableRewards: this.claimableRewards\r\n            }}>\r\n                {this.props.children}\r\n            </web3Context.Provider >\r\n        )\r\n    }\r\n}\r\n\r\nexport { web3Context, Web3Provider }",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":4,"column":17,"nodeType":"33","messageId":"34","endLine":4,"endColumn":32},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'_ethnolVaultABI' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]